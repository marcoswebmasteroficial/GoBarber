{"ast":null,"code":"var _jsxFileName = \"/home/marcos/Documentos/marcos/react/projetos/agendamento/admin/src/pages/ForgotPassword/index.tsx\";\nimport React, { useRef, useCallback, useState } from 'react';\nimport { FiMail } from 'react-icons/fi';\nimport { Form } from '@unform/web';\nimport * as Yup from 'yup';\nimport { Link } from 'react-router-dom';\nimport Button from '../../components/Button';\nimport Input from '../../components/Input';\nimport { useToast } from '../../hooks/toast';\nimport getValidationErrors from '../../utils/getValidationErrors';\nimport { Container, Content } from './styles';\nimport api from '../../services/api';\n\nconst ForgotPassword = () => {\n  const [loading, setLoading] = useState(false);\n  const formRef = useRef(null);\n  const {\n    addToast\n  } = useToast();\n  const handleSubmit = useCallback(async data => {\n    try {\n      var _formRef$current;\n\n      setLoading(true);\n      (_formRef$current = formRef.current) === null || _formRef$current === void 0 ? void 0 : _formRef$current.setErrors({});\n      const schema = Yup.object().shape({\n        email: Yup.string().required('E-mail obrigatório').email('Digite um e-mail válido')\n      });\n      await schema.validate(data, {\n        abortEarly: false\n      });\n      await api.post('/password/forgot', {\n        email: data.email\n      });\n      addToast({\n        type: 'success',\n        title: 'E-mail de recuperação de senha enviado',\n        description: 'Enviamos um e-mail para confirmar a recuperação de senha, cheque sua caixa de entrada.'\n      });\n    } catch (err) {\n      if (err instanceof Yup.ValidationError) {\n        var _formRef$current2;\n\n        const errors = getValidationErrors(err);\n        (_formRef$current2 = formRef.current) === null || _formRef$current2 === void 0 ? void 0 : _formRef$current2.setErrors(errors);\n        return;\n      }\n\n      addToast({\n        type: 'error',\n        title: 'Erro na recuperação de senha',\n        description: 'Ocorreu um erro ao tentar realizar a recuperação de senha, tente novamente.'\n      });\n    } finally {\n      setLoading(false);\n    }\n  }, [addToast]);\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    ref: formRef,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, \"Recuperar senha\"), /*#__PURE__*/React.createElement(Input, {\n    name: \"email\",\n    icon: FiMail,\n    placeholder: \"E-mail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    loading: loading,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, \"Recuperar\")), /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, \"Voltar ao Login\")));\n};\n\nexport default ForgotPassword;","map":{"version":3,"sources":["/home/marcos/Documentos/marcos/react/projetos/agendamento/admin/src/pages/ForgotPassword/index.tsx"],"names":["React","useRef","useCallback","useState","FiMail","Form","Yup","Link","Button","Input","useToast","getValidationErrors","Container","Content","api","ForgotPassword","loading","setLoading","formRef","addToast","handleSubmit","data","current","setErrors","schema","object","shape","email","string","required","validate","abortEarly","post","type","title","description","err","ValidationError","errors"],"mappings":"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","sourcesContent":["import React, { useRef, useCallback, useState } from 'react';\nimport { FiLogIn, FiMail } from 'react-icons/fi';\nimport { FormHandles } from '@unform/core';\nimport { Form } from '@unform/web';\nimport * as Yup from 'yup';\nimport { Link } from 'react-router-dom';\n\nimport logo from '../../assets/logo.svg';\n\nimport Button from '../../components/Button';\nimport Input from '../../components/Input';\n\nimport { useToast } from '../../hooks/toast';\nimport getValidationErrors from '../../utils/getValidationErrors';\n\nimport { Container, Content } from './styles';\nimport api from '../../services/api';\n\ninterface ForgotPasswordFormData {\n  email: string;\n}\n\nconst ForgotPassword: React.FC = () => {\n  const [loading, setLoading] = useState(false);\n  const formRef = useRef<FormHandles>(null);\n\n  const { addToast } = useToast();\n\n  const handleSubmit = useCallback(\n    async (data: ForgotPasswordFormData) => {\n      try {\n        setLoading(true);\n        formRef.current?.setErrors({});\n\n        const schema = Yup.object().shape({\n          email: Yup.string()\n            .required('E-mail obrigatório')\n            .email('Digite um e-mail válido'),\n        });\n\n        await schema.validate(data, {\n          abortEarly: false,\n        });\n\n        await api.post('/password/forgot', {\n          email: data.email,\n        });\n\n        addToast({\n          type: 'success',\n          title: 'E-mail de recuperação de senha enviado',\n          description:\n            'Enviamos um e-mail para confirmar a recuperação de senha, cheque sua caixa de entrada.',\n        });\n      } catch (err) {\n        if (err instanceof Yup.ValidationError) {\n          const errors = getValidationErrors(err);\n\n          formRef.current?.setErrors(errors);\n          return;\n        }\n\n        addToast({\n          type: 'error',\n          title: 'Erro na recuperação de senha',\n          description:\n            'Ocorreu um erro ao tentar realizar a recuperação de senha, tente novamente.',\n        });\n      } finally {\n        setLoading(false);\n      }\n    },\n    [addToast],\n  );\n\n  return (\n    <Container>\n      <Content>\n \n\n        <Form ref={formRef} onSubmit={handleSubmit}>\n     \n        <h1>Recuperar senha</h1>\n          <Input name=\"email\" icon={FiMail} placeholder=\"E-mail\" />\n\n          <Button loading={loading} type=\"submit\">\n            Recuperar\n          </Button>\n     \n        </Form>\n\n        <Link to=\"/\">Voltar ao Login</Link>\n      </Content>\n    </Container>\n  );\n};\n\nexport default ForgotPassword;\n"]},"metadata":{},"sourceType":"module"}