{"ast":null,"code":"var _jsxFileName = \"/home/marcos/Documentos/marcos/react/projetos/agendamento/web/src/components/Input/index.tsx\";\nimport React, { useEffect, useRef, useState, useCallback } from 'react';\nimport { useField } from '@unform/core';\nimport { FiAlertCircle } from 'react-icons/fi';\nimport { FaEye, FaEyeSlash } from 'react-icons/fa';\nimport { Container, Error } from './styles';\n\nconst Input = ({\n  name,\n  icon: Icon,\n  hidePassword,\n  ...rest\n}) => {\n  var _inputRef$current2;\n\n  const inputRef = useRef(null);\n  const [isFocused, setIsFocused] = useState(false);\n  const [isFilled, setIsFilled] = useState(false);\n  const [ishidePassword, sethidePassword] = useState(false);\n  const {\n    fieldName,\n    defaultValue,\n    registerField,\n    error\n  } = useField(name);\n  useEffect(() => {\n    registerField({\n      name: fieldName,\n      ref: inputRef.current,\n      path: 'value'\n    });\n  }, [fieldName, registerField]);\n\n  const handlePassword = () => {\n    if (ishidePassword) {\n      sethidePassword(false);\n    } else {\n      sethidePassword(true);\n    }\n  };\n\n  const handleInputFocus = useCallback(() => setIsFocused(true), []);\n  const handleInputBlur = useCallback(() => {\n    var _inputRef$current;\n\n    setIsFocused(false);\n    setIsFilled(!!((_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.value));\n  }, []);\n  return /*#__PURE__*/React.createElement(Container, {\n    isFocused: isFocused,\n    isFilled: isFilled,\n    isErrored: !!error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, Icon && /*#__PURE__*/React.createElement(Icon, {\n    size: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 16\n    }\n  }), console.log(`${ishidePassword ? 'text' : 'password'}`), /*#__PURE__*/React.createElement(\"input\", Object.assign({\n    onFocus: handleInputFocus,\n    onBlur: handleInputBlur,\n    ref: inputRef,\n    defaultValue: defaultValue\n  }, rest, {\n    type: ishidePassword ? 'text' : 'password',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  })), hidePassword && /*#__PURE__*/React.createElement(\"div\", {\n    onClick: handlePassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, ((_inputRef$current2 = inputRef.current) === null || _inputRef$current2 === void 0 ? void 0 : _inputRef$current2.type) && inputRef.current.type !== 'text' && ishidePassword ? /*#__PURE__*/React.createElement(FaEye, {\n    size: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(FaEyeSlash, {\n    size: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  })), error && /*#__PURE__*/React.createElement(Error, {\n    title: error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FiAlertCircle, {\n    size: 20,\n    color: \"#c53030\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  })));\n};\n\nexport default Input;","map":{"version":3,"sources":["/home/marcos/Documentos/marcos/react/projetos/agendamento/web/src/components/Input/index.tsx"],"names":["React","useEffect","useRef","useState","useCallback","useField","FiAlertCircle","FaEye","FaEyeSlash","Container","Error","Input","name","icon","Icon","hidePassword","rest","inputRef","isFocused","setIsFocused","isFilled","setIsFilled","ishidePassword","sethidePassword","fieldName","defaultValue","registerField","error","ref","current","path","handlePassword","handleInputFocus","handleInputBlur","value","console","log","type"],"mappings":"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","sourcesContent":["import React, {\n  InputHTMLAttributes,\n  useEffect,\n  useRef,\n  useState,\n  useCallback,\n} from 'react';\nimport { IconBaseProps } from 'react-icons';\nimport { useField } from '@unform/core';\nimport { FiAlertCircle } from 'react-icons/fi';\nimport { FaEye, FaEyeSlash } from 'react-icons/fa';\nimport { Container, Error } from './styles';\n\ninterface InputProps extends InputHTMLAttributes<HTMLInputElement> {\n  name: string;\n  icon?: React.ComponentType<IconBaseProps>;\n  hidePassword?: boolean;\n}\nconst Input: React.FC<InputProps> = ({\n  name,\n  icon: Icon,\n  hidePassword,\n  ...rest\n}) => {\n  const inputRef = useRef<HTMLInputElement>(null);\n  const [isFocused, setIsFocused] = useState(false);\n  const [isFilled, setIsFilled] = useState(false);\n  const [ishidePassword, sethidePassword] = useState(false);\n\n  const { fieldName, defaultValue, registerField, error } = useField(name);\n  useEffect(() => {\n    registerField({\n      name: fieldName,\n      ref: inputRef.current,\n      path: 'value',\n    });\n  }, [fieldName, registerField]);\n\n  const handlePassword = () => {\n    if (ishidePassword) {\n      sethidePassword(false);\n    } else {\n      sethidePassword(true);\n    }\n  };\n\n  const handleInputFocus = useCallback(() => setIsFocused(true), []);\n  const handleInputBlur = useCallback(() => {\n    setIsFocused(false);\n    setIsFilled(!!inputRef.current?.value);\n  }, []);\n  return (\n    <Container isFocused={isFocused} isFilled={isFilled} isErrored={!!error}>\n      {Icon && <Icon size={20} />}\n\n      {console.log(`${ishidePassword ? 'text' : 'password'}`)}\n\n      <input\n        onFocus={handleInputFocus}\n        onBlur={handleInputBlur}\n        ref={inputRef}\n        defaultValue={defaultValue}\n        {...rest}\n        type={ishidePassword ? 'text' : 'password'}\n      />\n\n      {hidePassword && (\n        <div onClick={handlePassword}>\n          {inputRef.current?.type &&\n          inputRef.current.type !== 'text' &&\n          ishidePassword ? (\n            <FaEye size={20} />\n          ) : (\n            <FaEyeSlash size={20} />\n          )}\n        </div>\n      )}\n\n      {error && (\n        <Error title={error}>\n          <FiAlertCircle size={20} color=\"#c53030\" />\n        </Error>\n      )}\n    </Container>\n  );\n};\n\nexport default Input;\n"]},"metadata":{},"sourceType":"module"}