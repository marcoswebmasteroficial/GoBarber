{"ast":null,"code":"var _jsxFileName = \"/home/marcos/Documentos/marcos/react/projetos/agendamento/web/src/components/Input/index.tsx\";\nimport React, { useEffect, useRef } from 'react';\nimport { useField } from '@unform/core';\nimport { Container } from './styles';\n\nconst Input = ({\n  name,\n  icon: Icon,\n  ...rest\n}) => {\n  const inputRef = useRef(null);\n  const {\n    fieldName,\n    defaultValue,\n    registerField,\n    error\n  } = useField(name);\n  useEffect(() => {\n    registerField({\n      name: fieldName,\n      ref: inputRef.current,\n      path: 'value'\n    });\n  }, [fieldName, registerField]);\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, Icon && /*#__PURE__*/React.createElement(Icon, {\n    size: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 16\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", Object.assign({\n    ref: inputRef,\n    defaultValue: defaultValue\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  })));\n};\n\nexport default Input;","map":{"version":3,"sources":["/home/marcos/Documentos/marcos/react/projetos/agendamento/web/src/components/Input/index.tsx"],"names":["React","useEffect","useRef","useField","Container","Input","name","icon","Icon","rest","inputRef","fieldName","defaultValue","registerField","error","ref","current","path"],"mappings":";AAAA,OAAOA,KAAP,IAAqCC,SAArC,EAAgDC,MAAhD,QAA8D,OAA9D;AAEA,SAASC,QAAT,QAAyB,cAAzB;AACA,SAASC,SAAT,QAA0B,UAA1B;;AAMA,MAAMC,KAA2B,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,IAAI,EAAEC,IAAd;AAAoB,KAAGC;AAAvB,CAAD,KAAmC;AACrE,QAAMC,QAAQ,GAAGR,MAAM,CAAC,IAAD,CAAvB;AACA,QAAM;AAAES,IAAAA,SAAF;AAAaC,IAAAA,YAAb;AAA2BC,IAAAA,aAA3B;AAA0CC,IAAAA;AAA1C,MAAoDX,QAAQ,CAACG,IAAD,CAAlE;AACAL,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,aAAa,CAAC;AACZP,MAAAA,IAAI,EAAEK,SADM;AAEZI,MAAAA,GAAG,EAAEL,QAAQ,CAACM,OAFF;AAGZC,MAAAA,IAAI,EAAE;AAHM,KAAD,CAAb;AAKD,GANQ,EAMN,CAACN,SAAD,EAAYE,aAAZ,CANM,CAAT;AAOA,sBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,IAAI,iBAAI,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAE,EAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADX,eAEE;AAAO,IAAA,GAAG,EAAEE,QAAZ;AAAsB,IAAA,YAAY,EAAEE;AAApC,KAAsDH,IAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFF,CADF;AAMD,CAhBD;;AAkBA,eAAeJ,KAAf","sourcesContent":["import React, { InputHTMLAttributes, useEffect, useRef } from 'react';\nimport { IconBaseProps } from 'react-icons';\nimport { useField } from '@unform/core';\nimport { Container } from './styles';\n\ninterface InputProps extends InputHTMLAttributes<HTMLInputElement> {\n  name: string;\n  icon?: React.ComponentType<IconBaseProps>;\n}\nconst Input: React.FC<InputProps> = ({ name, icon: Icon, ...rest }) => {\n  const inputRef = useRef(null);\n  const { fieldName, defaultValue, registerField, error } = useField(name);\n  useEffect(() => {\n    registerField({\n      name: fieldName,\n      ref: inputRef.current,\n      path: 'value',\n    });\n  }, [fieldName, registerField]);\n  return (\n    <Container>\n      {Icon && <Icon size={20} />}\n      <input ref={inputRef} defaultValue={defaultValue} {...rest} />\n    </Container>\n  );\n};\n\nexport default Input;\n"]},"metadata":{},"sourceType":"module"}