{"ast":null,"code":"var _jsxFileName = \"/home/marcos/Documentos/marcos/react/projetos/agendamento/web/src/hooks/toast.tsx\";\nimport React, { createContext, useContext, useCallback, useState } from 'react';\nimport ToastContainer from '../components/ToastContainer';\nconst ToastContext = createContext({});\n\nconst ToastProvider = ({\n  children\n}) => {\n  const [messagens, setMessages] = useState([]);\n  const addToast = useCallback(() => {\n    console.log('addToast');\n  }, []);\n  const removeToast = useCallback(() => {\n    console.log('removeToast');\n  }, []);\n  return /*#__PURE__*/React.createElement(ToastContext.Provider, {\n    value: {\n      addToast,\n      removeToast\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ToastContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }), children);\n};\n\nfunction useToast() {\n  const context = useContext(ToastContext);\n\n  if (!context) {\n    throw new Error('ERROR! ToastContext');\n  }\n\n  return context;\n}\n\nexport { ToastProvider, useToast };","map":{"version":3,"sources":["/home/marcos/Documentos/marcos/react/projetos/agendamento/web/src/hooks/toast.tsx"],"names":["React","createContext","useContext","useCallback","useState","ToastContainer","ToastContext","ToastProvider","children","messagens","setMessages","addToast","console","log","removeToast","useToast","context","Error"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,WAA3C,EAAwDC,QAAxD,QAAwE,OAAxE;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AAYA,MAAMC,YAAY,GAAGL,aAAa,CAAmB,EAAnB,CAAlC;;AAEA,MAAMM,aAAuB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAChD,QAAM,CAACC,SAAD,EAAYC,WAAZ,IAA2BN,QAAQ,CAAe,EAAf,CAAzC;AACA,QAAMO,QAAQ,GAAGR,WAAW,CAAC,MAAM;AACjCS,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACD,GAF2B,EAEzB,EAFyB,CAA5B;AAGA,QAAMC,WAAW,GAAGX,WAAW,CAAC,MAAM;AACpCS,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACD,GAF8B,EAE5B,EAF4B,CAA/B;AAIA,sBACE,oBAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE;AAAEF,MAAAA,QAAF;AAAYG,MAAAA;AAAZ,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGN,QAFH,CADF;AAMD,CAfD;;AAiBA,SAASO,QAAT,GAAsC;AACpC,QAAMC,OAAO,GAAGd,UAAU,CAACI,YAAD,CAA1B;;AACA,MAAI,CAACU,OAAL,EAAc;AACZ,UAAM,IAAIC,KAAJ,CAAU,qBAAV,CAAN;AACD;;AACD,SAAOD,OAAP;AACD;;AAED,SAAST,aAAT,EAAwBQ,QAAxB","sourcesContent":["import React, { createContext, useContext, useCallback, useState } from 'react';\nimport ToastContainer from '../components/ToastContainer';\n\ninterface ToastMessage {\n  id: string;\n  type?: 'success' | 'error' | 'info';\n  title: string;\n  description?: string;\n}\ninterface ToastContextData {\n  addToast(): void;\n  removeToast(): void;\n}\nconst ToastContext = createContext<ToastContextData>({} as ToastContextData);\n\nconst ToastProvider: React.FC = ({ children }) => {\n  const [messagens, setMessages] = useState<ToastMessage>([]);\n  const addToast = useCallback(() => {\n    console.log('addToast');\n  }, []);\n  const removeToast = useCallback(() => {\n    console.log('removeToast');\n  }, []);\n\n  return (\n    <ToastContext.Provider value={{ addToast, removeToast }}>\n      <ToastContainer />\n      {children}\n    </ToastContext.Provider>\n  );\n};\n\nfunction useToast(): ToastContextData {\n  const context = useContext(ToastContext);\n  if (!context) {\n    throw new Error('ERROR! ToastContext');\n  }\n  return context;\n}\n\nexport { ToastProvider, useToast };\n"]},"metadata":{},"sourceType":"module"}